[build-system]
requires = ["setuptools",
            "setuptools_scm",
            "wheel"]
build-backend = 'setuptools.build_meta'

[tool.gilesbot]
[tool.gilesbot.circleci_artifacts]
enabled = true

[tool.gilesbot.circleci_artifacts.figure_report]
url = "results/fig_comparison.html"
message = "Click details to see the image test comparisons, for py311-test-visual"
report_on_fail = true


[tool.ruff]
# ruff check: pycodestyle, Pyflakes, McCabe, flake8-bugbear, flake8-simplify
lint.select = ["ALL"]
exclude=[
    "*_parsetab.py",
    "*_lextab.py"
]
lint.ignore = [  # NOTE: non-permanent exclusions should be added to `.ruff.toml` instead.

    # flake8-builtins (A) : shadowing a Python built-in.
    # New ones should be avoided and is up to maintainers to enforce.
    "A00",

    # flake8-commas (COM)
    "COM812",  # TrailingCommaMissing

    # pydocstyle (D)
    # Missing Docstrings
    "D102",  # Missing docstring in public method. Don't check b/c docstring inheritance.
    "D105",  # Missing docstring in magic method. Don't check b/c class docstring.
    # Whitespace Issues
    "D200",  # FitsOnOneLine
    # Docstring Content Issues
    "D410",  # BlankLineAfterSection. Using D412 instead.
    "D400",  # EndsInPeriod.  NOTE: might want to revisit this.

    # pycodestyle (E, W)
    "E741",  # AmbiguousVariableName. Physics variables are often poor code variables

    # flake8-fixme (FIX)
    "FIX002",  # Line contains TODO | notes for improvements are OK iff the code works

    # ISC001 shouldn't be used with ruff format
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "ISC001",

    # pep8-naming (N)
    "N803",  # invalid-argument-name. Physics variables are often poor code variables
    "N806",  # non-lowercase-variable-in-function. Physics variables are often poor code variables

    # flake8-self (SLF)
    "SLF001", # private member access

    # flake8-todos (TD)
    "TD002",  # Missing author in TODO

    # Ruff-specific rules (RUF)
    "RUF001",  # ambiguous-unicode-character-string
    "RUF005",  # unpack-instead-of-concatenating-to-collection-literal -- it's not clearly faster.
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "RUF021",  # Parenthesize `a and b` expressions when chaining `and` and `or` together
    "RUF022",  # `__all__` is not sorted
    "RUF100",  # Unused blanket `noqa` directive
]

[tool.ruff.lint.extend-per-file-ignores]
# implicit-namespace-package. The examples and configuration files are not a package.
".github/workflows/*.py" = ["INP001"]
"setup.py" = ["INP001"]
"docs/conf.py" = ["INP001"]

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true
mypy-init-return = true

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-type-checking]
exempt-modules = []

[tool.ruff.lint.isort]
known-first-party = ["glue_jupyter", "glue_core"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
